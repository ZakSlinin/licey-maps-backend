#!/bin/bash

# üöÄ –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤

echo "üéØ Licey Maps Backend - –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç"
echo "======================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose"
    exit 1
fi

echo "‚úÖ Docker –∏ Docker Compose –Ω–∞–π–¥–µ–Ω—ã"

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose ps

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API..."

echo "üìç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π —Ç–æ—á–∫–∏..."
response=$(curl -s -o /dev/null -w "%{http_code}" "http://localhost:8080/get-nav-point?navPointId=1")
if [ "$response" = "200" ]; then
    echo "‚úÖ Nav-Point Service —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå Nav-Point Service –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (HTTP $response)"
fi

echo "üó∫Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ BFS –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏..."
response=$(curl -s -o /dev/null -w "%{http_code}" -X POST "http://localhost:8080/find-route" \
  -H "Content-Type: application/json" \
  -d '{"start_point_id": 1, "end_point_id": 5}')
if [ "$response" = "200" ]; then
    echo "‚úÖ BFS –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå BFS –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $response)"
fi

echo ""
echo "üéâ –ì–æ—Ç–æ–≤–æ! –í–∞—à–∏ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã:"
echo "   ‚Ä¢ Nav-Point Service: http://localhost:8080"
echo "   ‚Ä¢ Point Service: http://localhost:8081"
echo "   ‚Ä¢ PostgreSQL: localhost:5433"
echo ""
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
echo "   ‚Ä¢ FRONTEND_GUIDE.md - –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ"
echo "   ‚Ä¢ examples/ - –ì–æ—Ç–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"
echo "   ‚Ä¢ DEPLOYMENT.md - –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –¥–µ–ø–ª–æ—é"
echo ""
echo "üß™ –ü—Ä–∏–º–µ—Ä —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
echo "   curl -X POST 'http://localhost:8080/find-route' \\"
echo "     -H 'Content-Type: application/json' \\"
echo "     -d '{\"start_point_id\": 1, \"end_point_id\": 5}'"
echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   docker-compose ps          # –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "   docker-compose logs        # –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
echo "   docker-compose down        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "   docker-compose restart     # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"
